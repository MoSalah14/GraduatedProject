@model OutbornE_commerce.BAL.Dto.Categories.CategoryDto

@{
    ViewData["Title"] = "Create New Category";
}

<div class="container-fluid px-4">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-xl-6">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-gradient-primary text-white py-4">
                    <div class="d-flex align-items-center">
                        <div class="icon-circle bg-white bg-opacity-20 me-3">
                            <i class="fas fa-tags text-white"></i>
                        </div>
                        <div>
                            <h1 class="card-title mb-1 fs-3 fw-bold">Create New Category</h1>
                            <p class="mb-0 opacity-75">Add a new category to organize your products</p>
                        </div>
                    </div>
                </div>

                <div class="card-body p-5">
                    <form asp-action="Create" enctype="multipart/form-data" id="categoryForm">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger d-none"></div>

                        <div class="form-section">
                            <h5 class="section-title">
                                <i class="fas fa-info-circle me-2"></i>Category Information
                            </h5>

                            <div class="form-floating mb-3">
                                <input asp-for="NameEn" class="form-control" placeholder="English Name" />
                                <label for="NameEn">English Name *</label>
                                <span asp-validation-for="NameEn" class="text-danger small"></span>
                            </div>

                            <div class="form-floating mb-4">
                                <input asp-for="NameAr" class="form-control" placeholder="Arabic Name" />
                                <label for="NameAr">Arabic Name *</label>
                                <span asp-validation-for="NameAr" class="text-danger small"></span>
                            </div>
                        </div>

                      

                        <!-- Form Actions -->
                        <div class="form-section">
                            <div class="d-flex justify-content-between align-items-center pt-4 border-top">
                                <a asp-action="Index" class="btn btn-outline-secondary btn-lg">
                                    <i class="fas fa-arrow-left me-2"></i>Back to List
                                </a>
                                <div>
                                    <button type="button" class="btn btn-outline-primary btn-lg me-3" onclick="resetForm()">
                                        <i class="fas fa-redo me-2"></i>Reset Form
                                    </button>
                                    <button type="submit" class="btn btn-gradient-primary btn-lg">
                                        <i class="fas fa-save me-2"></i>Create Category
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .bg-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .btn-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        color: white;
        font-weight: 600;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        transition: all 0.3s ease;
    }

        .btn-gradient-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
            color: white;
        }

    .icon-circle {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
    }

    .form-section {
        margin-bottom: 2rem;
    }

    .section-title {
        color: #495057;
        font-weight: 600;
        margin-bottom: 1.5rem;
        padding-bottom: 0.5rem;
        border-bottom: 2px solid #e9ecef;
    }

    .form-floating > label {
        color: #6c757d;
    }

    .form-control:focus, .form-select:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }

    .image-upload-card {
        border: 2px dashed #e0e0e0;
        border-radius: 12px;
        padding: 1.5rem;
        background: #fafafa;
        transition: all 0.3s ease;
        position: relative;
    }

        .image-upload-card:hover {
            border-color: #667eea;
            background-color: #f8fbff;
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.1);
        }

    .upload-area {
        display: block;
        text-align: center;
        cursor: pointer;
        padding: 2rem 1rem;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

        .upload-area:hover {
            background-color: rgba(102, 126, 234, 0.05);
        }

    .icon-wrapper {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 60px;
        height: 60px;
    }

    .image-preview {
        margin-top: 1rem;
        display: none;
        text-align: center;
    }

        .image-preview.active {
            display: block;
        }

    .preview-image {
        max-width: 200px;
        max-height: 200px;
        object-fit: cover;
        border-radius: 8px;
        border: 2px solid #dee2e6;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .preview-container {
        position: relative;
        display: inline-block;
    }

    .remove-image {
        position: absolute;
        top: -8px;
        right: -8px;
        background: #dc3545;
        color: white;
        border: none;
        border-radius: 50%;
        width: 28px;
        height: 28px;
        font-size: 14px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        transition: all 0.3s ease;
    }

        .remove-image:hover {
            background: #c82333;
            transform: scale(1.1);
        }

    .card {
        border-radius: 15px;
        overflow: hidden;
        animation: fadeInUp 0.6s ease-out;
    }

    .alert {
        border-radius: 10px;
        border: none;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .form-floating {
        animation: fadeInUp 0.6s ease-out;
        animation-fill-mode: both;
    }

        .form-floating:nth-child(1) {
            animation-delay: 0.1s;
        }

        .form-floating:nth-child(2) {
            animation-delay: 0.2s;
        }




    .d-flex.justify-content-between {
        flex-direction: column;
        gap: 1rem;
    }

        .d-flex.justify-content-between > div {
            display: flex;
            gap: 0.5rem;
        }

    }
</style>

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    $(document).ready(function() {
        // File input change handler
        $('#ImageFile').change(function() {
            handleImagePreview(this, '#imagePreview');
        });

        // Form validation
        $('#categoryForm').submit(function(e) {
            var isValid = true;
            var errorMessages = [];

            // Check required fields
            if (!$('#NameEn').val().trim()) {
                errorMessages.push('English Name is required');
                isValid = false;
            }

            if (!$('#NameAr').val().trim()) {
                errorMessages.push('Arabic Name is required');
                isValid = false;
            }

            // Validate name lengths
            if ($('#NameEn').val().trim().length > 100) {
                errorMessages.push('English Name must not exceed 100 characters');
                isValid = false;
            }

            if ($('#NameAr').val().trim().length > 100) {
                errorMessages.push('Arabic Name must not exceed 100 characters');
                isValid = false;
            }

            if (!isValid) {
                e.preventDefault();
                showValidationErrors(errorMessages);
            }
        });

        // Real-time validation feedback
        $('#NameEn, #NameAr').on('input', function() {
            var $this = $(this);
            var value = $this.val().trim();

            if (value.length === 0) {
                $this.removeClass('is-valid').addClass('is-invalid');
            } else if (value.length > 100) {
                $this.removeClass('is-valid').addClass('is-invalid');
            } else {
                $this.removeClass('is-invalid').addClass('is-valid');
            }
        });
    });

    function handleImagePreview(input, previewContainer) {
        var container = $(previewContainer);
        container.empty();

        if (input.files && input.files[0]) {
            var file = input.files[0];

            // Validate file size (2MB limit)
            if (file.size > 2 * 1024 * 1024) {
                alert('File size must be less than 2MB');
                $(input).val('');
                return;
            }

            // Validate file type
            if (!file.type.match('image.*')) {
                alert('Please select a valid image file');
                $(input).val('');
                return;
            }

            container.addClass('active');

            var reader = new FileReader();
            reader.onload = function(e) {
                var previewHtml = `
                    <div class="preview-container">
                        <img src="${e.target.result}" alt="Category Preview" class="preview-image">
                        <button type="button" class="remove-image" onclick="removePreviewImage(this, '${input.id}')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                `;
                container.html(previewHtml);
            };
            reader.readAsDataURL(file);
        } else {
            container.removeClass('active');
        }
    }

    function removePreviewImage(button, inputId) {
        $(button).closest('.preview-container').remove();
        $('#' + inputId).val('');
        $('#imagePreview').removeClass('active');
    }

    function showValidationErrors(errors) {
        var alertHtml = `
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <h6><i class="fas fa-exclamation-triangle me-2"></i>Please fix the following errors:</h6>
                <ul class="mb-0">
                    ${errors.map(error => `<li>${error}</li>`).join('')}
                </ul>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `;

        $('.card-body').prepend(alertHtml);
        $('html, body').animate({
            scrollTop: $('.alert').offset().top - 100
        }, 500);
    }

    function resetForm() {
        if (confirm('Are you sure you want to reset the form? All entered data will be lost.')) {
            $('#categoryForm')[0].reset();
            $('#imagePreview').removeClass('active').empty();
            $('.is-invalid, .is-valid').removeClass('is-invalid is-valid');
            $('.alert').remove();
        }
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}