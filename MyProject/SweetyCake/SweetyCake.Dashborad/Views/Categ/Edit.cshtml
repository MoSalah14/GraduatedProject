@model OutbornE_commerce.BAL.Dto.Categories.CategoryDto


@{
    ViewData["Title"] = "Edit";
}

<body>
    <div class="container">
        <h1 class="text-center">Edit Category</h1>
        <hr />
        <div class="row">
            <div class="col-md-6">
                <form asp-action="Edit" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Id" />
                    <div class="form-group">
                        <label for="CategoryName" class="control-label">Arabic Name</label>
                        <input asp-for="NameAr" class="form-control" />
                        <span asp-validation-for="NameAr" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="Description" class="control-label">English Name</label>
                        <input asp-for="NameEn" class="form-control" />
                        <span asp-validation-for="NameEn" class="text-danger"></span>
                    </div>
                @*     <div class="form-group">
                        <label for="Image" class="control-label">Image</label>
                        <input type="file" asp-for="Image" class="form-control-file" />
                        <span asp-validation-for="Image" class="text-danger"></span>
                    </div> *@<br />
                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    <!-- Bootstrap JavaScript (Optional if you need JS features) -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
