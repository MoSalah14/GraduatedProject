@model OutbornE_commerce.BAL.Dto.Categories.CategoryDto
@{
    ViewData["Title"] = "Edit Category";
}

<div class="container-fluid px-4">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-xl-6">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-gradient-primary text-white py-4">
                    <div class="d-flex align-items-center">
                        <div class="icon-circle bg-white bg-opacity-20 me-3">
                            <i class="fas fa-edit text-white"></i>
                        </div>
                        <div>
                            <h1 class="card-title mb-1 fs-3 fw-bold">Edit Category</h1>
                            <p class="mb-0 opacity-75">Update category information</p>
                        </div>
                    </div>
                </div>

                <div class="card-body p-5">
                    <form asp-action="Edit" enctype="multipart/form-data" id="categoryEditForm">
                        <input type="hidden" asp-for="Id" />
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger d-none"></div>

                        <div class="form-section">
                            <h5 class="section-title">
                                <i class="fas fa-info-circle me-2"></i>Category Information
                            </h5>

                            <div class="form-floating mb-3">
                                <input asp-for="NameAr" class="form-control" placeholder="Arabic Name" />
                                <label for="NameAr">Arabic Name *</label>
                                <span asp-validation-for="NameAr" class="text-danger small"></span>
                            </div>

                            <div class="form-floating mb-3">
                                <input asp-for="NameEn" class="form-control" placeholder="English Name" />
                                <label for="NameEn">English Name *</label>
                                <span asp-validation-for="NameEn" class="text-danger small"></span>
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="form-section">
                            <div class="d-flex justify-content-between align-items-center pt-4 border-top">
                                <a asp-action="Index" class="btn btn-outline-secondary btn-lg">
                                    <i class="fas fa-arrow-left me-2"></i>Back to List
                                </a>
                                <div>
                                    <button type="submit" class="btn btn-gradient-primary btn-lg">
                                        <i class="fas fa-save me-2"></i>Update Category
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .bg-gradient-primary {
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
    }

    .btn-gradient-primary {
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        border: none;
        color: white;
        font-weight: 600;
        box-shadow: 0 4px 15px rgba(0, 123, 255, 0.4);
        transition: all 0.3s ease;
    }

        .btn-gradient-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 123, 255, 0.6);
            color: white;
        }

    .icon-circle {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
    }

    .form-section {
        margin-bottom: 2rem;
    }

    .section-title {
        color: #495057;
        font-weight: 600;
        margin-bottom: 1.5rem;
        padding-bottom: 0.5rem;
        border-bottom: 2px solid #e9ecef;
    }

    .form-floating > label {
        color: #6c757d;
    }

    .form-control:focus, .form-select:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .card {
        border-radius: 15px;
        overflow: hidden;
        animation: fadeInUp 0.6s ease-out;
    }



    .alert {
        border-radius: 10px;
        border: none;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .btn-outline-secondary {
        border: 2px solid #6c757d;
        color: #6c757d;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .btn-outline-secondary:hover {
            background-color: #6c757d;
            border-color: #6c757d;
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(108, 117, 125, 0.3);
        }

    .btn-lg {
        padding: 0.75rem 2rem;
        font-size: 1.1rem;
        border-radius: 8px;
    }
</style>

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    $(document).ready(function() {
        // Form validation
        $('#categoryEditForm').submit(function(e) {
            var isValid = true;
            var errorMessages = [];

            // Check required fields
            if (!$('#NameAr').val().trim()) {
                errorMessages.push('Arabic Name is required');
                isValid = false;
            }

            if (!$('#NameEn').val().trim()) {
                errorMessages.push('English Name is required');
                isValid = false;
            }

            if (!isValid) {
                e.preventDefault();
                showValidationErrors(errorMessages);
            }
        });

        // Real-time validation feedback
        $('#NameAr, #NameEn').on('blur', function() {
            var $field = $(this);
            var fieldName = $field.attr('id') === 'NameAr' ? 'Arabic Name' : 'English Name';

            if (!$field.val().trim()) {
                $field.addClass('is-invalid');
                var feedback = $field.siblings('.invalid-feedback');
                if (feedback.length === 0) {
                    $field.after(`<div class="invalid-feedback">${fieldName} is required</div>`);
                }
            } else {
                $field.removeClass('is-invalid');
                $field.siblings('.invalid-feedback').remove();
            }
        });

        // Remove validation errors on input
        $('#NameAr, #NameEn').on('input', function() {
            $(this).removeClass('is-invalid');
            $(this).siblings('.invalid-feedback').remove();
        });
    });

    function showValidationErrors(errors) {
        var alertHtml = `
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <h6><i class="fas fa-exclamation-triangle me-2"></i>Please fix the following errors:</h6>
                <ul class="mb-0">
                    ${errors.map(error => `<li>${error}</li>`).join('')}
                </ul>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `;

        $('.card-body').prepend(alertHtml);
        $('html, body').animate({
            scrollTop: $('.alert').offset().top - 100
        }, 500);
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}